// <auto-generated />
using System;
using BloodDonationApp.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BloodDonationApp.Data.Migrations
{
    [DbContext(typeof(BloodDonationAppDbContext))]
    [Migration("20230722100734_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BloodDonationApp.Entities.Blood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Bloods");
                });

            modelBuilder.Entity("BloodDonationApp.Entities.Hospital", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Hospitals");
                });

            modelBuilder.Entity("BloodDonationApp.Entities.HospitalBlood", b =>
                {
                    b.Property<int>("BloodId")
                        .HasColumnType("int");

                    b.Property<int>("HospitalId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("BloodId", "HospitalId")
                        .HasName("PK_HospitalBloods_1");

                    b.HasIndex("HospitalId");

                    b.ToTable("HospitalBloods");
                });

            modelBuilder.Entity("BloodDonationApp.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("date");

                    b.Property<int?>("BloodId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("HospitalId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("BloodId");

                    b.HasIndex("HospitalId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BloodDonationApp.Entities.HospitalBlood", b =>
                {
                    b.HasOne("BloodDonationApp.Entities.Blood", "Blood")
                        .WithMany("HospitalBloods")
                        .HasForeignKey("BloodId")
                        .IsRequired()
                        .HasConstraintName("FK_HospitalBloods_Bloods");

                    b.HasOne("BloodDonationApp.Entities.Hospital", "Hospital")
                        .WithMany("HospitalBloods")
                        .HasForeignKey("HospitalId")
                        .IsRequired()
                        .HasConstraintName("FK_HospitalBloods_Hospitals1");

                    b.Navigation("Blood");

                    b.Navigation("Hospital");
                });

            modelBuilder.Entity("BloodDonationApp.Entities.User", b =>
                {
                    b.HasOne("BloodDonationApp.Entities.Blood", "Blood")
                        .WithMany("Users")
                        .HasForeignKey("BloodId")
                        .HasConstraintName("FK_Users_Bloods");

                    b.HasOne("BloodDonationApp.Entities.Hospital", "Hospital")
                        .WithMany("Users")
                        .HasForeignKey("HospitalId")
                        .HasConstraintName("FK_Users_Hospitals");

                    b.Navigation("Blood");

                    b.Navigation("Hospital");
                });

            modelBuilder.Entity("BloodDonationApp.Entities.Blood", b =>
                {
                    b.Navigation("HospitalBloods");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("BloodDonationApp.Entities.Hospital", b =>
                {
                    b.Navigation("HospitalBloods");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
